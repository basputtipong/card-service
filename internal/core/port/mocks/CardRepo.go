// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	port "card-service/internal/core/port"

	mock "github.com/stretchr/testify/mock"
)

// CardRepo is an autogenerated mock type for the CardRepo type
type CardRepo struct {
	mock.Mock
}

// GetByUserId provides a mock function with given fields: userId
func (_m *CardRepo) GetByUserId(userId string) ([]port.CardRepoRes, error) {
	ret := _m.Called(userId)

	if len(ret) == 0 {
		panic("no return value specified for GetByUserId")
	}

	var r0 []port.CardRepoRes
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]port.CardRepoRes, error)); ok {
		return rf(userId)
	}
	if rf, ok := ret.Get(0).(func(string) []port.CardRepoRes); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]port.CardRepoRes)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCardRepo creates a new instance of CardRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCardRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *CardRepo {
	mock := &CardRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
